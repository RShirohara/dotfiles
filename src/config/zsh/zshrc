# Run commands at the start of an interactive sessions.

## Initialize
### Enable powerlevel10k instant prompt.
if [[ -r "${XDG_CACHE_HOME}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

### Set Zinit path.
typeset -A ZINIT
ZINIT[HOME_DIR]="${XDG_DATA_HOME}/zsh/zinit"
ZINIT[BIN_DIR]="${ZINIT[HOME_DIR]}/bin"
ZINIT[COMPINIT_OPTS]="-C"

### Load Zinit.
source "${ZINIT[BIN_DIR]}/zinit.zsh"

### Enable Zinit completions.
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

## Plugins
### Zsh settings
zinit is-snippet lucid for \
  "${ZDOTDIR}/modules/settings/completion.zsh" \
  "${ZDOTDIR}/modules/settings/directory.zsh" \
  "${ZDOTDIR}/modules/settings/expansion.zsh" \
  "${ZDOTDIR}/modules/settings/history.zsh" \
  "${ZDOTDIR}/modules/settings/io.zsh" \
  "${ZDOTDIR}/modules/settings/prompt.zsh" \
  "${ZDOTDIR}/modules/settings/script.zsh" \
  "${ZDOTDIR}/modules/settings/external-command.zsh"

### Prezto modules
zinit is-snippet lucid for \
  "${ZDOTDIR}/modules/prezto/init.zsh" \
  "${ZDOTDIR}/modules/prezto/editor.zsh" \
  "${ZDOTDIR}/modules/prezto/terminal.zsh" \
  PZTM::environment \
  PZTM::editor \
  PZTM::terminal

### Theme
zinit light-mode lucid for \
  depth=1 @romkatv/powerlevel10k \
  is-snippet "${ZDOTDIR}/modules/powerlevel10k/p10k.zsh"

zinit light-mode lucid pack for \
  @zdharma-continuum/dircolors-material

### Syntax highlight
zinit light-mode lucid wait="0a" for \
  atinit="zicompinit; zicdreplay" \
  @zdharma-continuum/fast-syntax-highlighting

### Completion
zinit light-mode lucid wait="0c" for \
  blockf atpull="zi creinstall -q ." @zsh-users/zsh-completions \
  @Aloxaf/fzf-tab \
  is-snippet "${ZDOTDIR}/modules/fzf/setting.zsh"

### Suggestion
zinit light-mode lucid wait="0a" for \
  atload="!_zsh_autosuggest_start" @zsh-users/zsh-autosuggestions

### Auto-pair delimiters
zinit light-mode lucid for \
  @hlissner/zsh-autopair

### History helpers
zinit light-mode lucid for \
  @marlonrichert/zsh-hist

### Json interactive query
zinit light-mode lucid for \
  @reegnz/jq-zsh-plugin

## External command integrations
### @microsoft/vscode
if [[ $(command -v code) ]]; then
  zinit is-snippet lucid if='[[ "${TERM_PROGRAM}" == "vscode" ]]' for \
    "$(code --locate-shell-integration-path zsh)" \
    "${ZDOTDIR}/modules/vscode/shell-integration.zsh"
fi

### @junegunn/fzf
if [[ $(command -v fzf) ]] && [[ ! -d "${ZINIT[PLUGINS_DIR]}/junegunn---fzf" ]]; then
  mkdir -p "${ZINIT[PLUGINS_DIR]}/junegunn---fzf"
  csplit -f "${ZINIT[PLUGINS_DIR]}/junegunn---fzf/xx" <(fzf --zsh) "/### end:/+1" > /dev/null
  mv "${ZINIT[PLUGINS_DIR]}/junegunn---fzf/xx00" "${ZINIT[PLUGINS_DIR]}/junegunn---fzf/key-bindings.zsh"
  mv "${ZINIT[PLUGINS_DIR]}/junegunn---fzf/xx01" "${ZINIT[PLUGINS_DIR]}/junegunn---fzf/_fzf"
fi
zinit is-snippet light-mode lucid blockf has="fzf" for \
  "${ZINIT[PLUGINS_DIR]}/junegunn---fzf/key-bindings.zsh" \
  "${ZINIT[PLUGINS_DIR]}/junegunn---fzf/_fzf"

### @jdx/mise
if [[ $(command -v mise) ]] && [[ ! -d "${ZINIT[PLUGINS_DIR]}/jdx---mise" ]]; then
  mkdir -p "${ZINIT[PLUGINS_DIR]}/jdx---mise"
  mise activate zsh > "${ZINIT[PLUGINS_DIR]}/jdx---mise/activate.zsh"
  mise completion zsh > "${ZINIT[PLUGINS_DIR]}/jdx---mise/_mise"
fi
zinit is-snippet light-mode lucid blockf has="mise" for \
  "${ZINIT[PLUGINS_DIR]}/jdx---mise/activate.zsh" \
  "${ZINIT[PLUGINS_DIR]}/jdx---mise/_mise"
